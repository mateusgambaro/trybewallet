{"ast":null,"code":"import { REQUEST_WALLET, REQUEST_API, REQUEST_API_SUCCESS, REQUEST_API_ERROR } from '../actions';\nconst INNITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isFetching: false\n};\n\nconst wallet = (state = INNITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_WALLET:\n      return { ...state,\n        wallet: action.payload\n      };\n\n    case REQUEST_API:\n      return { ...state,\n        isFetching: true\n      };\n\n    case REQUEST_API_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        currencies: Object.keys(action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybewallet/src/reducers/wallet.js"],"names":["REQUEST_WALLET","REQUEST_API","REQUEST_API_SUCCESS","REQUEST_API_ERROR","INNITIAL_STATE","currencies","expenses","isFetching","wallet","state","action","type","payload","Object","keys"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,EAAsCC,mBAAtC,EACEC,iBADF,QAC2B,YAD3B;AAGA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,UAAU,EAAE,EADS;AAErBC,EAAAA,QAAQ,EAAE,EAFW;AAGrBC,EAAAA,UAAU,EAAE;AAHS,CAAvB;;AAMA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGL,cAAT,EAAyBM,MAAzB,KAAoC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKX,cAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYD,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAA3B,OAAP;;AAEF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AACKF,QAAAA,UAAU,EAAE;AADjB,OAAP;;AAIF,SAAKL,mBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLF,QAAAA,UAAU,EAAEQ,MAAM,CAACC,IAAP,CAAYJ,MAAM,CAACE,OAAnB;AAHP,OAAP;;AAKF;AACE,aAAOH,KAAP;AAhBF;AAkBD,CAnBD;;AAqBA,eAAeD,MAAf","sourcesContent":["import { REQUEST_WALLET, REQUEST_API, REQUEST_API_SUCCESS,\n  REQUEST_API_ERROR } from '../actions';\n\nconst INNITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isFetching: false,\n};\n\nconst wallet = (state = INNITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_WALLET:\n    return { ...state, wallet: action.payload };\n\n  case REQUEST_API:\n    return {\n      ...state, isFetching: true,\n    };\n\n  case REQUEST_API_SUCCESS:\n    return {\n      ...state,\n      isFetching: false,\n      currencies: Object.keys(action.payload),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"]},"metadata":{},"sourceType":"module"}