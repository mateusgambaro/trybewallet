{"ast":null,"code":"import { REQUEST_API, REQUEST_API_SUCCESS, REQUEST_API_ERROR, RE } from '../actions';\nconst INNITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isFetching: false\n};\n\nconst wallet = (state = INNITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_API:\n      return { ...state,\n        isFetching: true\n      };\n\n    case REQUEST_API_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        currencies: Object.keys(action.payload)\n      };\n\n    case REQUEST_API_ERROR:\n      return { ...state,\n        isFetching: false,\n        currencies: Error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybewallet/src/reducers/wallet.js"],"names":["REQUEST_API","REQUEST_API_SUCCESS","REQUEST_API_ERROR","RE","INNITIAL_STATE","currencies","expenses","isFetching","wallet","state","action","type","Object","keys","payload","Error"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,mBAAtB,EACEC,iBADF,EACqBC,EADrB,QAC+B,YAD/B;AAGA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,UAAU,EAAE,EADS;AAErBC,EAAAA,QAAQ,EAAE,EAFW;AAGrBC,EAAAA,UAAU,EAAE;AAHS,CAAvB;;AAMA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGL,cAAT,EAAyBM,MAAzB,KAAoC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKX,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AACKF,QAAAA,UAAU,EAAE;AADjB,OAAP;;AAIF,SAAKN,mBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLF,QAAAA,UAAU,EAAEO,MAAM,CAACC,IAAP,CAAYH,MAAM,CAACI,OAAnB;AAHP,OAAP;;AAMF,SAAKZ,iBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLF,QAAAA,UAAU,EAAEU;AAHP,OAAP;;AAMF;AACE,aAAON,KAAP;AArBF;AAuBD,CAxBD;;AA0BA,eAAeD,MAAf","sourcesContent":["import { REQUEST_API, REQUEST_API_SUCCESS,\n  REQUEST_API_ERROR, RE } from '../actions';\n\nconst INNITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isFetching: false,\n};\n\nconst wallet = (state = INNITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_API:\n    return {\n      ...state, isFetching: true,\n    };\n\n  case REQUEST_API_SUCCESS:\n    return {\n      ...state,\n      isFetching: false,\n      currencies: Object.keys(action.payload),\n    };\n\n  case REQUEST_API_ERROR:\n    return {\n      ...state,\n      isFetching: false,\n      currencies: Error,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"]},"metadata":{},"sourceType":"module"}