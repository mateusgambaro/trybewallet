{"ast":null,"code":"var _jsxFileName = \"/home/mateus/trybewallet/src/components/Header.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport logo from '../images/logo.jpg';\nimport './Header.css';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.totalExpensesCalculator = this.totalExpensesCalculator.bind(this);\n  }\n\n  totalExpensesCalculator() {\n    const {\n      expenses\n    } = this.props;\n    let total = '';\n\n    for (let index = 0; index < expenses.length; index += 1) {\n      const sum = Number(Number(expenses[index].value) * Number(expenses[index].exchangeRates[expenses[index].currency].ask)).toFixed(2);\n      total = Number(total) + Number(sum);\n    }\n\n    console.log(total);\n\n    if (isNaN(total)) {\n      return 0;\n    }\n\n    return Number(total);\n  }\n\n  render() {\n    const {\n      userEmail\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"TrybeWallet\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"email-total\",\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Oi, \", userEmail), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"total-value\",\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"R$\", this.totalExpensesCalculator()), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"BRL\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"total-expenses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Total de Despesas\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userEmail: state.user.email,\n  expense: state.wallet.expenses\n});\n\nexport default connect(mapStateToProps, null)(Header);\nHeader.propTypes = {\n  userEmail: PropTypes.string.isRequired,\n  expense: PropTypes.arrayOf(PropTypes.shape()).isRequired\n};","map":{"version":3,"sources":["/home/mateus/trybewallet/src/components/Header.js"],"names":["React","PropTypes","connect","logo","Header","Component","constructor","totalExpensesCalculator","bind","expenses","props","total","index","length","sum","Number","value","exchangeRates","currency","ask","toFixed","console","log","isNaN","render","userEmail","mapStateToProps","state","user","email","expense","wallet","propTypes","string","isRequired","arrayOf","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport logo from '../images/logo.jpg';\nimport './Header.css';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    this.totalExpensesCalculator = this.totalExpensesCalculator.bind(this);\n  }\n\n  totalExpensesCalculator() {\n    const { expenses } = this.props;\n    let total = '';\n    for (let index = 0; index < expenses.length; index += 1) {\n      const sum = Number(\n        Number(expenses[index].value) *\n          Number(expenses[index].exchangeRates[expenses[index].currency].ask)\n      ).toFixed(2);\n\n      total = Number(total) + Number(sum);\n    }\n    console.log(total);\n    if (isNaN(total)) {\n      return 0;\n    }\n\n    return Number(total);\n  }\n\n  render() {\n    const { userEmail } = this.props;\n    return (\n      <section className='header'>\n        <img src={logo} alt=\"logo-img\"></img>\n        <h1>TrybeWallet</h1>\n        <div>\n          <p className='email-total' data-testid=\"email-field\">\n          Oi, {userEmail}\n         </p>\n         <div>\n          <span className=\"total-value\" data-testid=\"total-field\">R${this.totalExpensesCalculator()}</span>\n          <p data-testid=\"header-currency-field\">BRL</p>\n          <p className=\"total-expenses\">Total de Despesas</p>\n           <hr></hr>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  expense: state.wallet.expenses,\n});\nexport default connect(mapStateToProps, null)(Header);\n\nHeader.propTypes = {\n  userEmail: PropTypes.string.isRequired,\n  expense: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}