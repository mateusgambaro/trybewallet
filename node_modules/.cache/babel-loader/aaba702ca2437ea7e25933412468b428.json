{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-trybewallet/src/components/WalletForms.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencyAPI, expensesAPI } from '../actions';\n\nclass WalletForms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Cartão de crédito',\n      tag: 'Alimentação'\n    };\n    this.renderValue = this.renderValue.bind(this);\n    this.renderDescription = this.renderDescription.bind(this);\n    this.renderCurrency = this.renderCurrency.bind(this);\n    this.renderPayment = this.renderPayment.bind(this);\n    this.renderTag = this.renderTag.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      getWalletData\n    } = this.props;\n    getWalletData();\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit() {\n    const {\n      dispatchExpenses,\n      expense\n    } = this.props;\n    dispatchExpenses(this.state, expense.length);\n    this.setState({\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    });\n  }\n\n  renderValue() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"expenses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, \"Valor\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"value\",\n      id: \"expenses\",\n      value: value,\n      onChange: this.handleChange,\n      placeholder: \"Expenses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderDescription() {\n    const {\n      description\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, \"Descri\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      id: \"Description\",\n      value: description,\n      onChange: this.handleChange,\n      placeholder: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderCurrency() {\n    const {\n      getDataCurrencies\n    } = this.props;\n    const {\n      currency\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      id: \"currency\",\n      value: currency,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, getDataCurrencies.map((currencies, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: currencies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, currencies))));\n  }\n\n  renderPayment() {\n    const {\n      method\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, \"M\\xE9todo de Pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      type: \"number\",\n      name: \"method\",\n      id: \"method\",\n      value: method,\n      onChange: this.handleChange,\n      placeholder: \"Payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de Cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de Cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de D\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de D\\xE9bito\")));\n  }\n\n  renderTag() {\n    const {\n      tag\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, \"Tag\", /*#__PURE__*/React.createElement(\"select\", {\n      type: \"number\",\n      name: \"tag\",\n      id: \"Tag\",\n      value: tag,\n      onChange: this.handleChange,\n      placeholder: \"Tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"Sa\\xFAde\")));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, this.renderValue(), this.renderDescription(), this.renderCurrency(), this.renderPayment(), this.renderTag(), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getWalletData: state => dispatch(fetchCurrencyAPI(state)),\n  dispatchExpenses: (state, id) => dispatch(expensesAPI(state, id))\n});\n\nconst mapStateToProps = state => ({\n  getDataCurrencies: state.wallet.currencies,\n  expense: state.wallet.expenses\n});\n\nWalletForms.propTypes = {\n  getWalletData: PropTypes.func.isRequired,\n  getDataCurrencies: PropTypes.shape().isRequired,\n  dispatchExpenses: PropTypes.func.isRequired,\n  expense: PropTypes.arrayOf(PropTypes.shape()).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForms);","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybewallet/src/components/WalletForms.js"],"names":["React","PropTypes","connect","fetchCurrencyAPI","expensesAPI","WalletForms","Component","constructor","props","state","value","description","currency","method","tag","renderValue","bind","renderDescription","renderCurrency","renderPayment","renderTag","handleChange","handleSubmit","componentDidMount","getWalletData","target","name","setState","dispatchExpenses","expense","length","getDataCurrencies","map","currencies","index","render","mapDispatchToProps","dispatch","id","mapStateToProps","wallet","expenses","propTypes","func","isRequired","shape","arrayOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencyAPI, expensesAPI } from '../actions';\n\nclass WalletForms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Cartão de crédito',\n      tag: 'Alimentação',\n    };\n\n    this.renderValue = this.renderValue.bind(this);\n    this.renderDescription = this.renderDescription.bind(this);\n    this.renderCurrency = this.renderCurrency.bind(this);\n    this.renderPayment = this.renderPayment.bind(this);\n    this.renderTag = this.renderTag.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { getWalletData } = this.props;\n    getWalletData();\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit() {\n    const { dispatchExpenses, expense } = this.props;\n    dispatchExpenses(this.state, expense.length);\n\n    this.setState({\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    });\n  }\n\n  renderValue() {\n    const { value } = this.state;\n    return (\n      <label htmlFor=\"expenses\">\n        Valor\n        <input\n          type=\"number\"\n          name=\"value\"\n          id=\"expenses\"\n          value={ value }\n          onChange={ this.handleChange }\n          placeholder=\"Expenses\"\n        />\n      </label>\n\n    );\n  }\n\n  renderDescription() {\n    const { description } = this.state;\n    return (\n      <label htmlFor=\"Description\">\n        Descrição\n        <input\n          type=\"text\"\n          name=\"description\"\n          id=\"Description\"\n          value={ description }\n          onChange={ this.handleChange }\n          placeholder=\"Description\"\n        />\n      </label>\n    );\n  }\n\n  renderCurrency() {\n    const { getDataCurrencies } = this.props;\n    const { currency } = this.state;\n    return (\n      <label htmlFor=\"currency\">\n        Moeda\n        <select\n          name=\"currency\"\n          id=\"currency\"\n          value={ currency }\n          onChange={ this.handleChange }\n        >\n          { getDataCurrencies.map((currencies, index) => (\n            <option\n              key={ index }\n              value={ currencies }\n            >\n              { currencies }\n            </option>\n          )) }\n        </select>\n      </label>\n    );\n  }\n\n  renderPayment() {\n    const { method } = this.state;\n    return (\n      <label htmlFor=\"method\">\n        Método de Pagamento\n        <select\n          type=\"number\"\n          name=\"method\"\n          id=\"method\"\n          value={ method }\n          onChange={ this.handleChange }\n          placeholder=\"Payment\"\n        >\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de Crédito\">Cartão de Crédito</option>\n          <option value=\"Cartão de Débito\">Cartão de Débito</option>\n        </select>\n      </label>\n    );\n  }\n\n  renderTag() {\n    const { tag } = this.state;\n    return (\n      <label htmlFor=\"Tag\">\n        Tag\n        <select\n          type=\"number\"\n          name=\"tag\"\n          id=\"Tag\"\n          value={ tag }\n          onChange={ this.handleChange }\n          placeholder=\"Tag\"\n        >\n          <option value=\"Alimentação\">Alimentação</option>\n          <option value=\"Lazer\">Lazer</option>\n          <option value=\"Trabalho\">Trabalho</option>\n          <option value=\"Transporte\">Transporte</option>\n          <option value=\"Saúde\">Saúde</option>\n        </select>\n      </label>\n    );\n  }\n\n  render() {\n    return (\n      <form>\n        { this.renderValue() }\n        { this.renderDescription() }\n        { this.renderCurrency() }\n        { this.renderPayment() }\n        { this.renderTag() }\n        <button\n          type=\"submit\"\n          onClick={ () => this.handleSubmit() }\n        >\n          Adicionar despesa\n\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWalletData: (state) => dispatch(fetchCurrencyAPI(state)),\n  dispatchExpenses: (state, id) => dispatch(expensesAPI(state, id)),\n});\n\nconst mapStateToProps = (state) => ({\n  getDataCurrencies: state.wallet.currencies,\n  expense: state.wallet.expenses,\n});\n\nWalletForms.propTypes = {\n  getWalletData: PropTypes.func.isRequired,\n  getDataCurrencies: PropTypes.shape().isRequired,\n  dispatchExpenses: PropTypes.func.isRequired,\n  expense: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForms);\n"]},"metadata":{},"sourceType":"module"}