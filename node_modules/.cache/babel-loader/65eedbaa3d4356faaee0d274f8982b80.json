{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-trybewallet/src/components/WalletForms.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencyAPI } from '../actions/index';\n\nclass WalletForms extends React.Component {\n  constructor() {\n    super();\n    this.renderValue = this.renderValue.bind(this);\n    this.renderDescription = this.renderDescription.bind(this);\n    this.renderCurrency = this.renderCurrency.bind(this);\n    this.renderPayment = this.renderPayment.bind(this);\n    this.renderTag = this.renderTag.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      getWalletData\n    } = this.props;\n    getWalletData();\n  }\n\n  renderValue() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Expenses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, \"Valor\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"Expenses\",\n      id: \"Expenses\",\n      placeholder: \"Expenses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderDescription() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, \"Descri\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Description\",\n      id: \"Description\",\n      placeholder: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderCurrency() {\n    const {\n      getDataCurrencies\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      id: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, getDataCurrencies.map((currencies, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: currencies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, currencies))));\n  }\n\n  renderPayment() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, \"M\\xE9todo de Pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      type: \"number\",\n      name: \"Payment\",\n      id: \"Payment\",\n      placeholder: \"Payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de Cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de Cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de D\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de D\\xE9bito\")));\n  }\n\n  renderTag() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, \"Tag\", /*#__PURE__*/React.createElement(\"select\", {\n      type: \"number\",\n      name: \"Tag\",\n      id: \"Tag\",\n      placeholder: \"Tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Sa\\xFAde\")));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, this.renderValue(), this.renderDescription(), this.renderCurrency(), this.renderPayment(), this.renderTag());\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getWalletData: state => dispatch(fetchCurrencyAPI(state))\n});\n\nconst mapStateToProps = state => ({\n  getDataCurrencies: state.wallet.currencies\n});\n\nWalletForms.propTypes = {\n  getWalletData: PropTypes.func.isRequired,\n  getDataCurrencies: PropTypes.shape().isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForms);","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybewallet/src/components/WalletForms.js"],"names":["React","PropTypes","connect","fetchCurrencyAPI","WalletForms","Component","constructor","renderValue","bind","renderDescription","renderCurrency","renderPayment","renderTag","componentDidMount","getWalletData","props","getDataCurrencies","map","currencies","index","render","mapDispatchToProps","dispatch","state","mapStateToProps","wallet","propTypes","func","isRequired","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencyAPI } from '../actions/index';\n\nclass WalletForms extends React.Component {\n  constructor() {\n    super();\n    this.renderValue = this.renderValue.bind(this);\n    this.renderDescription = this.renderDescription.bind(this);\n    this.renderCurrency = this.renderCurrency.bind(this);\n    this.renderPayment = this.renderPayment.bind(this);\n    this.renderTag = this.renderTag.bind(this);\n  }\n\n  componentDidMount() {\n    const { getWalletData } = this.props;\n    getWalletData();\n  }\n\n  renderValue() {\n    return (\n      <label htmlFor=\"Expenses\">\n        Valor\n        <input\n          type=\"number\"\n          name=\"Expenses\"\n          id=\"Expenses\"\n          placeholder=\"Expenses\"\n        />\n      </label>\n\n    );\n  }\n\n  renderDescription() {\n    return (\n      <label htmlFor=\"Description\">\n        Descrição\n        <input\n          type=\"text\"\n          name=\"Description\"\n          id=\"Description\"\n          placeholder=\"Description\"\n        />\n      </label>\n    );\n  }\n\n  renderCurrency() {\n    const { getDataCurrencies } = this.props;\n    return (\n      <label htmlFor=\"currency\">\n        Moeda\n        <select name=\"currency\" id=\"currency\">\n        { getDataCurrencies.map((currencies, index) => (\n            <option\n              key={ index }\n              value={ currencies }\n            >\n              { currencies }\n            </option>\n          )) }\n        </select>\n      </label>\n    );\n  }\n\n  renderPayment() {\n    return (\n      <label htmlFor=\"Payment\">\n        Método de Pagamento\n        <select\n          type=\"number\"\n          name=\"Payment\"\n          id=\"Payment\"\n          placeholder=\"Payment\"\n        >\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de Crédito\">Cartão de Crédito</option>\n          <option value=\"Cartão de Débito\">Cartão de Débito</option>\n        </select>\n      </label>\n    );\n  }\n\n  renderTag() {\n    return (\n      <label htmlFor=\"Tag\">\n        Tag\n        <select\n          type=\"number\"\n          name=\"Tag\"\n          id=\"Tag\"\n          placeholder=\"Tag\"\n        >\n          <option value=\"Alimentação\">Alimentação</option>\n          <option value=\"Lazer\">Lazer</option>\n          <option value=\"Trabalho\">Trabalho</option>\n          <option value=\"Transporte\">Transporte</option>\n          <option value=\"Saúde\">Saúde</option>\n        </select>\n      </label>\n    );\n  }\n\n  render() {\n    return (\n      <form>\n        { this.renderValue() }\n        { this.renderDescription() }\n        { this.renderCurrency() }\n        { this.renderPayment() }\n        { this.renderTag() }\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWalletData: (state) => dispatch(fetchCurrencyAPI(state)),\n});\n\nconst mapStateToProps = (state) => ({\n  getDataCurrencies: state.wallet.currencies,\n});\n\nWalletForms.propTypes = {\n  getWalletData: PropTypes.func.isRequired,\n  getDataCurrencies: PropTypes.shape().isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForms);\n"]},"metadata":{},"sourceType":"module"}