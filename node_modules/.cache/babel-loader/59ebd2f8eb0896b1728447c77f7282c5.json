{"ast":null,"code":"import { REQUEST_API, REQUEST_API_SUCCESS, REQUEST_API_ERROR, REQUEST_API_EXPENSES, REQUEST_API_EXPENSES_SUCCESS, SAVE_EXPENSE, DELETE_EXPENSE, EDIT_EXPENSE, SET_EDITED_EXPENSE, FINISH_EDIT } from '../actions';\nconst INNITIAL_STATE = {\n  currencies: [],\n  isFetching: false,\n  expenses: [],\n  total: '',\n  editExpense: ''\n};\n\nfunction setEdited(state, action) {\n  const newArr = state.expenses.map(expense2 => {\n    if (expense2.id === action.expense.id) {\n      return action.expense;\n    }\n\n    return expense2;\n  });\n  return { ...state,\n    expenses: newArr,\n    editing: false\n  };\n}\n\nfunction deleteExpense2(state, action) {\n  const newArray = state.expenses.filter(expense2 => expense2.id !== action.expense.id);\n  const newTotal = Number(Number(action.expense.value) * Number(action.expense.exchangeRates[action.expense.currency].ask));\n  return { ...state,\n    expenses: newArray,\n    total: Number(state.total - newTotal).toFixed(2)\n  };\n}\n\nconst wallet = (state = INNITIAL_STATE, action) => {\n  const {\n    expense,\n    rates\n  } = action;\n\n  switch (action.type) {\n    case REQUEST_API:\n      return { ...state,\n        isFetching: true\n      };\n\n    case REQUEST_API_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        currencies: Object.keys(action.payload)\n      };\n\n    case REQUEST_API_ERROR:\n      return { ...state,\n        isFetching: false,\n        currencies: Error\n      };\n\n    case REQUEST_API_EXPENSES:\n      return { ...state,\n        isFetching: false\n      };\n\n    case REQUEST_API_EXPENSES_SUCCESS:\n      return { ...state,\n        expenses: [...state.expenses, {\n          id: action.id,\n          ...action.expensesInfo,\n          exchangeRates: action.dataAPI\n        }]\n      };\n\n    case SAVE_EXPENSE:\n      {\n        expense.exchangeRates = rates;\n        const valor = expense.value * rates[expense.currency].ask;\n        const total = Number(state.total) + Number(valor);\n        return { ...state,\n          expenses: [...state.expenses, expense],\n          total: Number(total).toFixed(2)\n        };\n      }\n\n    case EDIT_EXPENSE:\n      {\n        return { ...state,\n          editExpense: action.expense,\n          editing: true\n        };\n      }\n\n    case FINISH_EDIT:\n      {\n        return { ...state,\n          editExpense: ''\n        };\n      }\n\n    case SET_EDITED_EXPENSE:\n      return setEdited(state, action);\n\n    case DELETE_EXPENSE:\n      return deleteExpense2(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"sources":["/home/mateus/trybewallet/src/reducers/wallet.js"],"names":["REQUEST_API","REQUEST_API_SUCCESS","REQUEST_API_ERROR","REQUEST_API_EXPENSES","REQUEST_API_EXPENSES_SUCCESS","SAVE_EXPENSE","DELETE_EXPENSE","EDIT_EXPENSE","SET_EDITED_EXPENSE","FINISH_EDIT","INNITIAL_STATE","currencies","isFetching","expenses","total","editExpense","setEdited","state","action","newArr","map","expense2","id","expense","editing","deleteExpense2","newArray","filter","newTotal","Number","value","exchangeRates","currency","ask","toFixed","wallet","rates","type","Object","keys","payload","Error","expensesInfo","dataAPI","valor"],"mappings":"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","sourcesContent":["import { REQUEST_API, REQUEST_API_SUCCESS,\n  REQUEST_API_ERROR,\n  REQUEST_API_EXPENSES, REQUEST_API_EXPENSES_SUCCESS, SAVE_EXPENSE, DELETE_EXPENSE,\nEDIT_EXPENSE, SET_EDITED_EXPENSE, FINISH_EDIT } from '../actions';\n\nconst INNITIAL_STATE = {\n  currencies: [],\n  isFetching: false,\n  expenses: [],\n  total: '',\n  editExpense: ''\n};\n\nfunction setEdited(state, action) {\n  const newArr = state.expenses.map((expense2) => {\n    if (expense2.id === action.expense.id) {\n      return action.expense;\n    }\n    return expense2;\n  });\n\n  return {\n    ...state,\n    expenses: newArr,\n    editing: false,\n  };\n}\n\nfunction deleteExpense2(state, action) {\n  const newArray = state.expenses.filter(\n    (expense2) => expense2.id !== action.expense.id,\n  );\n  const newTotal = Number(\n    Number(action.expense.value)\n    * Number(action.expense.exchangeRates[action.expense.currency].ask),\n  );\n\n  return {\n    ...state,\n    expenses: newArray,\n    total: Number(state.total - newTotal).toFixed(2),\n  };\n}\n\nconst wallet = (state = INNITIAL_STATE, action) => {\n  const { expense, rates } = action;\n  switch (action.type) {\n  case REQUEST_API:\n    return {\n      ...state, isFetching: true,\n    };\n\n  case REQUEST_API_SUCCESS:\n    return {\n      ...state,\n      isFetching: false,\n      currencies: Object.keys(action.payload),\n    };\n\n  case REQUEST_API_ERROR:\n    return {\n      ...state,\n      isFetching: false,\n      currencies: Error,\n    };\n\n  case REQUEST_API_EXPENSES:\n    return {\n      ...state,\n      isFetching: false,\n    };\n\n  case REQUEST_API_EXPENSES_SUCCESS:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses,\n        {\n          id: action.id,\n          ...action.expensesInfo,\n          exchangeRates: action.dataAPI,\n        },\n      ],\n    };\n\n    case SAVE_EXPENSE: {\n      expense.exchangeRates = rates;\n      const valor = expense.value * rates[expense.currency].ask;\n      const total = Number(state.total) + Number(valor);\n      return {\n        ...state,\n        expenses: [...state.expenses, expense],\n        total: Number(total).toFixed(2),\n      };\n    }\n\n    case EDIT_EXPENSE: {\n      return {\n        ...state,\n        editExpense: action.expense,\n        editing: true,\n      };\n    }\n  \n    case FINISH_EDIT: {\n      return {\n        ...state,\n        editExpense: '',\n      };\n    }\n  \n    case SET_EDITED_EXPENSE: return setEdited(state, action);\n\n    case DELETE_EXPENSE: return deleteExpense2(state, action);\n\n\n\n  default:\n    return state;\n  }\n\n\n};\n\nexport default wallet;\n"]},"metadata":{},"sourceType":"module"}