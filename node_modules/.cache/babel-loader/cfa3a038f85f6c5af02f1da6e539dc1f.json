{"ast":null,"code":"// ------------------------ ACTION FOR LOGIN ------------------------\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN';\nexport const requestLogin = payload => ({\n  type: REQUEST_LOGIN,\n  payload\n}); // ------------------------ ACTION REQUEST API TO WALLET ------------------------\n\nexport const REQUEST_API = 'REQUEST_API';\nexport const REQUEST_API_SUCCESS = 'REQUEST_API_SUCCESS';\nexport const REQUEST_API_ERROR = 'REQUEST_API_ERROR';\nexport const requestAPI = payload => ({\n  type: REQUEST_API,\n  payload\n});\nexport const requestAPISuccess = payload => ({\n  type: REQUEST_API_SUCCESS,\n  payload\n});\nexport const requestAPIError = payload => ({\n  type: REQUEST_API_ERROR,\n  payload\n});\nconst API_URL = 'https://economia.awesomeapi.com.br/json/all';\nexport const fetchCurrencyAPI = () => dispatch => {\n  dispatch(requestAPI());\n  fetch(API_URL).then(result => result.json()).then(data => {\n    delete data.USDT;\n    dispatch(requestAPISuccess(data));\n  }).catch(error => dispatch(requestAPIError(error)));\n}; // ------------------------ REQUEST API TO WALLET ------------------------\n\nexport const REQUEST_API_EXPENSES = 'REQUEST_API_EXPENSES';\nexport const REQUEST_API_EXPENSES_SUCCESS = 'REQUEST_API_EXPENSES_SUCCESS';\nexport const REQUEST_API_EXPENSES_ERROR = 'REQUEST_API_EXPENSES_ERROR';\nexport const requestAPIExpenses = () => ({\n  type: REQUEST_API_EXPENSES\n});\nexport const requestAPIExpensesSuccess = expenses => ({\n  type: REQUEST_API_EXPENSES_SUCCESS,\n  expensesInfo,\n  id,\n  dataAPI\n});\nexport const requestAPIExpensesError = payload => ({\n  type: REQUEST_API_EXPENSES_ERROR,\n  payload\n});\nexport const expensesAPI = (state, id) => dispatch => {\n  dispatch(requestAPIExpenses());\n  fetch(API_URL).then(response => response.json()).then(data => dispatch(requestAPIExpensesSuccess(state, id, data))).catch(error => dispatch(requestAPIExpensesError(error)));\n};","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybewallet/src/actions/index.js"],"names":["REQUEST_LOGIN","requestLogin","payload","type","REQUEST_API","REQUEST_API_SUCCESS","REQUEST_API_ERROR","requestAPI","requestAPISuccess","requestAPIError","API_URL","fetchCurrencyAPI","dispatch","fetch","then","result","json","data","USDT","catch","error","REQUEST_API_EXPENSES","REQUEST_API_EXPENSES_SUCCESS","REQUEST_API_EXPENSES_ERROR","requestAPIExpenses","requestAPIExpensesSuccess","expenses","expensesInfo","id","dataAPI","requestAPIExpensesError","expensesAPI","state","response"],"mappings":"AAAA;AAEA,OAAO,MAAMA,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,YAAY,GAAIC,OAAD,KAAc;AACxCC,EAAAA,IAAI,EAAEH,aADkC;AACnBE,EAAAA;AADmB,CAAd,CAArB,C,CAIP;;AACA,OAAO,MAAME,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,UAAU,GAAIL,OAAD,KAAc;AACtCC,EAAAA,IAAI,EAAEC,WADgC;AACnBF,EAAAA;AADmB,CAAd,CAAnB;AAIP,OAAO,MAAMM,iBAAiB,GAAIN,OAAD,KAAc;AAC7CC,EAAAA,IAAI,EAAEE,mBADuC;AAClBH,EAAAA;AADkB,CAAd,CAA1B;AAIP,OAAO,MAAMO,eAAe,GAAIP,OAAD,KAAc;AAC3CC,EAAAA,IAAI,EAAEG,iBADqC;AAClBJ,EAAAA;AADkB,CAAd,CAAxB;AAIP,MAAMQ,OAAO,GAAG,6CAAhB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACAM,EAAAA,KAAK,CAACH,OAAD,CAAL,CACGI,IADH,CACSC,MAAD,IAAYA,MAAM,CAACC,IAAP,EADpB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,WAAOA,IAAI,CAACC,IAAZ;AACAN,IAAAA,QAAQ,CAACJ,iBAAiB,CAACS,IAAD,CAAlB,CAAR;AACD,GALH,EAMGE,KANH,CAMUC,KAAD,IAAWR,QAAQ,CAACH,eAAe,CAACW,KAAD,CAAhB,CAN5B;AAOD,CATM,C,CAUP;;AACA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,4BAA4B,GAAG,8BAArC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AACvCrB,EAAAA,IAAI,EAAEkB;AADiC,CAAP,CAA3B;AAIP,OAAO,MAAMI,yBAAyB,GAAIC,QAAD,KAAe;AACtDvB,EAAAA,IAAI,EAAEmB,4BADgD;AAEtDK,EAAAA,YAFsD;AAGtDC,EAAAA,EAHsD;AAItDC,EAAAA;AAJsD,CAAf,CAAlC;AAOP,OAAO,MAAMC,uBAAuB,GAAI5B,OAAD,KAAc;AACnDC,EAAAA,IAAI,EAAEoB,0BAD6C;AAEnDrB,EAAAA;AAFmD,CAAd,CAAhC;AAKP,OAAO,MAAM6B,WAAW,GAAG,CAACC,KAAD,EAAQJ,EAAR,KAAgBhB,QAAD,IAAc;AACtDA,EAAAA,QAAQ,CAACY,kBAAkB,EAAnB,CAAR;AAEAX,EAAAA,KAAK,CAACH,OAAD,CAAL,CACGI,IADH,CACSmB,QAAD,IAAcA,QAAQ,CAACjB,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUL,QAAQ,CAACa,yBAAyB,CAACO,KAAD,EAAQJ,EAAR,EAAYX,IAAZ,CAA1B,CAF1B,EAGGE,KAHH,CAGUC,KAAD,IAAWR,QAAQ,CAACkB,uBAAuB,CAACV,KAAD,CAAxB,CAH5B;AAID,CAPM","sourcesContent":["// ------------------------ ACTION FOR LOGIN ------------------------\n\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN';\n\nexport const requestLogin = (payload) => ({\n  type: REQUEST_LOGIN, payload,\n});\n\n// ------------------------ ACTION REQUEST API TO WALLET ------------------------\nexport const REQUEST_API = 'REQUEST_API';\nexport const REQUEST_API_SUCCESS = 'REQUEST_API_SUCCESS';\nexport const REQUEST_API_ERROR = 'REQUEST_API_ERROR';\n\nexport const requestAPI = (payload) => ({\n  type: REQUEST_API, payload,\n});\n\nexport const requestAPISuccess = (payload) => ({\n  type: REQUEST_API_SUCCESS, payload,\n});\n\nexport const requestAPIError = (payload) => ({\n  type: REQUEST_API_ERROR, payload,\n});\n\nconst API_URL = 'https://economia.awesomeapi.com.br/json/all';\n\nexport const fetchCurrencyAPI = () => (dispatch) => {\n  dispatch(requestAPI());\n  fetch(API_URL)\n    .then((result) => result.json())\n    .then((data) => {\n      delete data.USDT;\n      dispatch(requestAPISuccess(data));\n    })\n    .catch((error) => dispatch(requestAPIError(error)));\n};\n// ------------------------ REQUEST API TO WALLET ------------------------\nexport const REQUEST_API_EXPENSES = 'REQUEST_API_EXPENSES';\nexport const REQUEST_API_EXPENSES_SUCCESS = 'REQUEST_API_EXPENSES_SUCCESS';\nexport const REQUEST_API_EXPENSES_ERROR = 'REQUEST_API_EXPENSES_ERROR';\n\nexport const requestAPIExpenses = () => ({\n  type: REQUEST_API_EXPENSES,\n});\n\nexport const requestAPIExpensesSuccess = (expenses) => ({\n  type: REQUEST_API_EXPENSES_SUCCESS,\n  expensesInfo,\n  id,\n  dataAPI,\n});\n\nexport const requestAPIExpensesError = (payload) => ({\n  type: REQUEST_API_EXPENSES_ERROR,\n  payload,\n});\n\nexport const expensesAPI = (state, id) => (dispatch) => {\n  dispatch(requestAPIExpenses());\n\n  fetch(API_URL)\n    .then((response) => response.json())\n    .then((data) => dispatch(requestAPIExpensesSuccess(state, id, data)))\n    .catch((error) => dispatch(requestAPIExpensesError(error)));\n};\n"]},"metadata":{},"sourceType":"module"}